name: 'Terraform Plan or Pull Request'

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:

  tfsec:
    name: tfsec
    runs-on: ubuntu-latest

    steps:
      - name: Clone repo
        uses: actions/checkout@v3

      - name: tfsec
        uses: aquasecurity/tfsec-action@v1.0.0
        with:
          soft_fail: true

  aws12d:
    name: 'Plan DEV'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: dev

    steps:
    
    - name: Clone repo
      uses: actions/checkout@v3

    - name: Configure AWS SOPS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2

    - name: Read secrets from AWS Secrets Manager into environment variables
      uses: abhilash1in/aws-secrets-manager-action@v2.1.0
      with:
        secrets: |
          platform/devops/terraform/dev/terraform-token
          platform/devops/github/dev/github-api-token
          cu/ims/ims/dev/aws_secret_Key
        parse-json: true

    - name: Check if env variable is set after fetching secrets
      run: |
        if [ -z ${PLATFORM_DEVOPS_TERRAFORM_DEV_TERRAFORM_TOKEN} ]; then echo "PLATFORM_DEVOPS_TERRAFORM_DEV_TERRAFORM_TOKEN is unset"; else echo "PLATFORM_DEVOPS_TERRAFORM_DEV_TERRAFORM_TOKEN is set."; fi
        if [ -z ${PLATFORM_DEVOPS_GITHUB_DEV_GITHUB_API_TOKEN} ]; then echo "PLATFORM_DEVOPS_GITHUB_DEV_GITHUB_API_TOKEN is unset"; else echo "PLATFORM_DEVOPS_GITHUB_DEV_GITHUB_API_TOKEN is set."; fi
        if [ -z ${CU_IMS_IMS_DEV_AWS_SECRET_KEY} ]; then echo "CU_IMS_IMS_DEV_AWS_SECRET_KEY is unset"; else echo "CU_IMS_IMS_DEV_AWS_SECRET_KEY is set."; fi

    - name: Configure AWS IMS DEV Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: AKIAV2CFPOYHHZSUCSLE
        aws-secret-access-key: ${{ env.CU_IMS_IMS_DEV_AWS_SECRET_KEY }}
        aws-region: us-west-2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ env.PLATFORM_DEVOPS_TERRAFORM_DEV_TERRAFORM_TOKEN }}

    - name: Terraform Init
      run: |
        git config --global url."https://oauth2:${{ env.PLATFORM_DEVOPS_GITHUB_DEV_GITHUB_API_TOKEN }}@github.com".insteadOf https://github.com
        terraform init

    - name: Terraform Plan
      run: terraform plan

  aws12q:
    needs: aws12d
    name: 'Plan QA'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: qa

    steps:
    
    - name: Clone repo
      uses: actions/checkout@v3

    - name: Configure AWS SOPS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2

    - name: Read secrets from AWS Secrets Manager into environment variables
      uses: abhilash1in/aws-secrets-manager-action@v2.1.0
      with:
        secrets: |
          platform/devops/terraform/dev/terraform-token
          platform/devops/github/dev/github-api-token
          cu/ims/ims/qa/aws_secret_Key
        parse-json: true

    - name: Check if env variable is set after fetching secrets
      run: |
        if [ -z ${PLATFORM_DEVOPS_TERRAFORM_DEV_TERRAFORM_TOKEN} ]; then echo "PLATFORM_DEVOPS_TERRAFORM_DEV_TERRAFORM_TOKEN is unset"; else echo "PLATFORM_DEVOPS_TERRAFORM_DEV_TERRAFORM_TOKEN is set."; fi
        if [ -z ${PLATFORM_DEVOPS_GITHUB_DEV_GITHUB_API_TOKEN} ]; then echo "PLATFORM_DEVOPS_GITHUB_DEV_GITHUB_API_TOKEN is unset"; else echo "PLATFORM_DEVOPS_GITHUB_DEV_GITHUB_API_TOKEN is set."; fi
        if [ -z ${CU_IMS_IMS_QA_AWS_SECRET_KEY} ]; then echo "CU_IMS_IMS_QA_AWS_SECRET_KEY is unset"; else echo "CU_IMS_IMS_QA_AWS_SECRET_KEY is set."; fi

    - name: Configure AWS IMS QA Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: AKIA4PLTDCGXXVEK5EUR
        aws-secret-access-key: ${{ env.CU_IMS_IMS_QA_AWS_SECRET_KEY }}
        aws-region: us-west-2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ env.PLATFORM_DEVOPS_TERRAFORM_DEV_TERRAFORM_TOKEN }}

    - name: Terraform Init
      run: |
        git config --global url."https://oauth2:${{ env.PLATFORM_DEVOPS_GITHUB_DEV_GITHUB_API_TOKEN }}@github.com".insteadOf https://github.com
        terraform init

    - name: Terraform Plan
      run: terraform plan

  aws12p:
    needs: aws12q
    name: 'Plan PROD'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: prod

    steps:
    
    - name: Clone repo
      uses: actions/checkout@v3
      
    - name: Configure AWS SOPS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2

    - name: Read secrets from AWS Secrets Manager into environment variables
      uses: abhilash1in/aws-secrets-manager-action@v2.1.0
      with:
        secrets: |
          platform/devops/terraform/prod/terraform-token
          platform/devops/github/prod/github-api-token
          cu/ims/ims/prod/aws_secret_Key
        parse-json: true

    - name: Check if env variable is set after fetching secrets
      run: |
        if [ -z ${PLATFORM_DEVOPS_TERRAFORM_PROD_TERRAFORM_TOKEN} ]; then echo "PLATFORM_DEVOPS_TERRAFORM_PROD_TERRAFORM_TOKEN is unset"; else echo "PLATFORM_DEVOPS_TERRAFORM_PROD_TERRAFORM_TOKEN is set."; fi
        if [ -z ${PLATFORM_DEVOPS_GITHUB_PROD_GITHUB_API_TOKEN} ]; then echo "PLATFORM_DEVOPS_GITHUB_PROD_GITHUB_API_TOKEN is unset"; else echo "PLATFORM_DEVOPS_GITHUB_PROD_GITHUB_API_TOKEN is set."; fi
        if [ -z ${CU_IMS_IMS_PROD_AWS_SECRET_KEY} ]; then echo "CU_IMS_IMS_PROD_AWS_SECRET_KEY is unset"; else echo "CU_IMS_IMS_PROD_AWS_SECRET_KEY is set."; fi

    - name: Configure AWS IMS PROD Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: AKIAVKLQF6FXAJPF3JYP
        aws-secret-access-key: ${{ env.CU_IMS_IMS_PROD_AWS_SECRET_KEY }}
        aws-region: us-west-2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ env.PLATFORM_DEVOPS_TERRAFORM_PROD_TERRAFORM_TOKEN }}

    - name: Terraform Init
      run: |
        git config --global url."https://oauth2:${{ env.PLATFORM_DEVOPS_GITHUB_PROD_GITHUB_API_TOKEN }}@github.com".insteadOf https://github.com
        terraform init

    - name: Terraform Plan
      run: terraform plan

